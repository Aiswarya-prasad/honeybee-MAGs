  plot_cum_curve_df <- cbind("name" = name, plot_cum_curve_df)
  return(plot_cum_curve_df)
}
df_plot_cum_curve <- rbind(
                        make_cum_curve(samples_am, df_magOTUs_vegan, 50, "Apis mellifera"),
                        make_cum_curve(samples_ac, df_magOTUs_vegan, 50, "Apis cerana"),
                        make_cum_curve(samples_ad, df_magOTUs_vegan, 50, "Apis dorsata"),
                        make_cum_curve(samples_af, df_magOTUs_vegan, 50, "Apis florea")
                      )
magotu_accumulation_curve <- ggplot(data = df_plot_cum_curve, aes(x = sample_size, y = number_of_clusters, color = factor(name, host_order))) +
                      geom_jitter(position = position_dodge(width=0.7)) +
                        geom_smooth(se = FALSE) +
                          labs(color = "Host species", x = "# Bees", y = "Number of magOTUs") +
                          scale_color_manual(values=host_order_color) +
                            make_theme(leg_pos = "bottom", setCol = F, guide_nrow = 1)
                            # ggsave("Figures/09c-magOTUs_accumulation_curve.pdf")
magotu_accumulation_curve
pcoa_plot_by_host <- function(df_pcoa) {
          matrix <- as.matrix(df_pcoa)
          dist <- as.dist(matrix)
          res_pcoa <- pcoa(dist)
          ev1 <- res_pcoa$vectors[,1]
          ev2 <- res_pcoa$vectors[,2]
          df_pcoa_new <- data.frame(cbind(ev1,ev2))
          df_pcoa_new$Sample <- rownames(df_pcoa_new)
          rownames(df_pcoa_new) <- NULL
          df_pcoa_new <- left_join(df_pcoa_new, select(df_meta, Sample, SpeciesID), by = "Sample")
          perc_axis <- round(((res_pcoa$values$Relative_eig[c(1,2)])*100), digits=1)
          axis_x_title <- paste0("PCo1 (",perc_axis[1],"%)")
          axis_y_title <- paste0("PCo2 (",perc_axis[2],"%)")
          p <- ggplot(df_pcoa_new, aes(x = ev1,
                                       y = ev2,
                                       colour = factor(SpeciesID, levels = host_order)))+
                geom_point(stat="identity", size=2, shape=19) +
                  labs(x=axis_x_title, y = axis_y_title, color = "Host") +
                    make_theme(setCol = F, guide_nrow = 1) +
                      scale_color_manual(values=host_order_color)
          return(p)
}
pcoa_plot <- function(df_pcoa, variable=SpeciesID) {
          matrix <- as.matrix(df_pcoa)
          dist <- as.dist(matrix)
          res_pcoa <- pcoa(dist)
          ev1 <- res_pcoa$vectors[,1]
          ev2 <- res_pcoa$vectors[,2]
          df_pcoa_new <- data.frame(cbind(ev1,ev2))
          df_pcoa_new$Sample <- rownames(df_pcoa_new)
          rownames(df_pcoa_new) <- NULL
          df_pcoa_new <- left_join(df_pcoa_new, select(df_meta, Sample, SpeciesID, matches(variable)), by = "Sample")
          perc_axis <- round(((res_pcoa$values$Relative_eig[c(1,2)])*100), digits=1)
          axis_x_title <- paste0("PCo1 (",perc_axis[1],"%)")
          axis_y_title <- paste0("PCo2 (",perc_axis[2],"%)")
          p <- ggplot(df_pcoa_new, aes(x = ev1,
                                       y = ev2,
                                       colour = get(variable)))+
                geom_point(stat="identity", aes(size=15, shape=14)) +
                  labs(x=axis_x_title, y = axis_y_title, color = variable) +
                    make_theme( max_colors = length(unique(df_pcoa_new[, variable])), guide_nrow = 4 )
          return(p)
}
dist_matrix <- as.matrix(vegdist(df_magOTUs_vegan, "jaccard"))
pcoa_magotus <- pcoa_plot_by_host(dist_matrix)
          # ggsave("Figures/09d-magOTUs_pcoa.pdf")
variable="SpeciesID"
df_pcoa <- dist_matrix
matrix <- as.matrix(df_pcoa)
dist <- as.dist(matrix)
res_pcoa <- pcoa(dist)
ev1 <- res_pcoa$vectors[,1]
ev2 <- res_pcoa$vectors[,2]
df_pcoa_new <- data.frame(cbind(ev1,ev2))
df_pcoa_new$Sample <- rownames(df_pcoa_new)
rownames(df_pcoa_new) <- NULL
df_pcoa_new <- left_join(df_pcoa_new, select(df_meta, Sample, SpeciesID, matches(variable)), by = "Sample")
perc_axis <- round(((res_pcoa$values$Relative_eig[c(1,2)])*100), digits=1)
axis_x_title <- paste0("PCo1 (",perc_axis[1],"%)")
axis_y_title <- paste0("PCo2 (",perc_axis[2],"%)")
ggplot(df_pcoa_new, aes(x = ev1,
                        y = ev2,
                        color = SpeciesID))+
                geom_point(stat="identity", size = 3, shape = 16) +
                  labs(x=axis_x_title, y = axis_y_title, color = "Host") +
                  scale_color_manual(values = host_order_color) +
                    make_theme(setCol = F, guide_nrow = 4)
                    ggsave(paste0("Figures/", "12_PCoA_host_colors.pdf"))
p_cov <- grid.arrange(
    arrangeGrob(
      grid.rect(gp=gpar(col="white")),
      ggdendrogram(magOTU_clustering_Cov) + theme(axis.text.y = element_text(size = 0)),
      grid.rect(gp=gpar(col="white")),
      ncol = 3,
      widths = c(2, 13, 1)
    ),
    arrangeGrob(
      Cov_heatmap
    ),
    nrow = 2,
    heights = c(1,4)
)
p_cov
ggsave("Figures/12f_heatmap_coverage_clustering.pdf", p_cov)
p_pa <- grid.arrange(
    arrangeGrob(
      grid.rect(gp=gpar(col="white")),
      ggdendrogram(magOTU_clustering_pa) + theme(axis.text.y = element_text(size = 0)),
      grid.rect(gp=gpar(col="white")),
      ncol = 3,
      widths = c(1.5, 10, 1)
    ),
    arrangeGrob(
      Pa_heatmap
    ),
    nrow = 2,
    heights = c(1,4)
)
p_pa
ggsave("Figures/12f_heatmap_presence_absence_clustering.pdf", p_pa)
score_hist <- ggplot(vis_magOTUs_df_all, aes(x = score, fill = factor(Host, host_order))) +
              geom_histogram(binwidth = 1) +
              labs(x = "Score", y = "Number of MAGs", fill = "Host") +
              geom_vline(xintercept = 15) +
                make_theme(setF = F,
                           leg_pos="right", leg_size = 7,
                           guide_nrow=4
                ) +
                  scale_fill_manual(values=host_order_color)
                  ggsave("Figures/11a-mag_drep_scores_histogram.pdf")
cluster_size_histogram <- ggplot(vis_magOTUs_df_all, aes(x = cluster_members, fill = factor(Genus, genera))) +
  geom_histogram(binwidth = 0.5) +
  labs(x = "Number of members", y = "Number of MAGs", fill = "Genus") +
    make_theme(setF = F,
               leg_pos="right", leg_size = 7,
               guide_nrow= 21
    ) +
      scale_fill_manual(values=genusColors)
      ggsave("Figures/11b-cluster_size_histogram.pdf")
get_num_clusters_and_MAGs_CMT <- function(df_info, cut_off_value){
  df_info %>%
    ungroup() %>%
      mutate(CMT = completeness - 5*contamination) %>%
        filter(CMT > cut_off_value) %>%
          summarise(MAGs = n_distinct(ID), Clusters = n_distinct(Cluster)) %>%
            as.list()
}
get_num_clusters_and_MAGs_CMT(vis_magOTUs_df_all, 0)[["MAGs"]]
get_num_clusters_and_MAGs_CMT(vis_magOTUs_df_all, 0)[["Clusters"]]
ggplot(vis_magOTUs_df_all, aes(y = Cluster, fill = factor(Genus, genera))) +
  geom_bar() +
  labs(x = "Number of MAGs", y = "Cluster", fill = "Genus") +
    make_theme(setF = F,
               leg_pos="right", leg_size = 7,
               guide_nrow= 21, y_size = 3
    ) +
    geom_vline(xintercept = 1) +
    facet_grid(~Host) +
      scale_fill_manual(values=genusColors)
cluster_completeness_number <- ggplot(vis_magOTUs_df_all, aes(y = Completeness_quality, x=cluster_members, fill = factor(Genus, genera))) +
  geom_bar(stat = "identity") +
  labs(x = "Completeness", y = "Cluster", fill = "Genus") +
    make_theme(setF = F,
               leg_pos="right", leg_size = 7,
               guide_nrow= 21, y_size = 3
    ) +
    geom_vline(xintercept = 1) +
    facet_wrap_paginate(~Cluster, ncol = 5, nrow = 7,
                      scales = "fixed", strip.position = "top", page = 5) +
      scale_fill_manual(values=genusColors)
paginate_save(cluster_completeness_number, "Cluster", "Figures/11x-clusters_completeness_numbers.pdf",
              pass_nrow = 7)
cluster_tax_info <- vis_magOTUs_df %>%
                      ungroup() %>%
                      select(Genus, Species, Cluster, Num_mags) %>%
                      unique() %>%
                        mutate(cluster_name = paste0(Genus, "-", Cluster))
corecov_data_dir <- "09_MagDatabaseProfiling/CoverageEstimation/Merged"
coords_df <- data.frame()
for (file in list.files(corecov_data_dir)) {
  if (endsWith(file, "_coord.txt")) {
    df_temp <- read.csv(paste0(corecov_data_dir, "/", file), sep = "\t", header = TRUE)
    coords_df <- rbind(coords_df, df_temp)
  }
}
coverage_df <- coords_df %>%
  rename(Cluster = magOTU) %>%
    left_join(cluster_tax_info) %>%
      mutate(Host = Vectorize(get_host_name)(Sample)) %>%
        mutate(Detected = ifelse(Cov > 0, 1, 0)) %>%
          mutate(Detected = ifelse(is.na(Detected), 0, Detected)) %>%
          mutate(Cov = ifelse(is.na(Cov), 0, Cov)) %>%
          group_by(Host, Cluster) %>%
            mutate(Present = sum(Detected)) %>%
            mutate(Mean = mean(Cov)) %>%
            mutate(Prevalence_host = ifelse(Host=="Apis mellifera", Present/length(samples_am), NA)) %>%
            mutate(Prevalence_host = ifelse(Host=="Apis cerana", Present/length(samples_ac), Prevalence_host)) %>%
            mutate(Prevalence_host = ifelse(Host=="Apis dorsata", Present/length(samples_ad), Prevalence_host)) %>%
            mutate(Prevalence_host = ifelse(Host=="Apis florea", Present/length(samples_af), Prevalence_host))
coverage_df_genus <- coords_df %>%
                rename(Cluster = magOTU) %>%
                  left_join(cluster_tax_info) %>%
                      mutate(Detected = ifelse(Cov > 0, 1, 0)) %>%
                        mutate(Detected = ifelse(is.na(Detected), 0, Detected)) %>%
                        mutate(Cov = ifelse(is.na(Cov), 0, Cov)) %>%
                        ungroup() %>%
                          group_by(Genus, Sample) %>%
                              summarise(Genus_Present = ifelse(any(Detected == 1), 1, 0), Num_mags = sum(Num_mags), Genus_cov = mean(Cov)) %>%
                               mutate(Host = Vectorize(get_host_name)(Sample)) %>%
                                group_by(Host, Genus) %>%
                                  mutate(Mean = round(mean(Genus_cov)), 2) %>%
                                  mutate(Present = sum(Genus_Present)) %>%
                                  mutate(Prevalence_host = ifelse(Host=="Apis mellifera", Present/length(samples_am), NA)) %>%
                                  mutate(Prevalence_host = ifelse(Host=="Apis cerana",Present/length(samples_ac), Prevalence_host)) %>%
                                  mutate(Prevalence_host = ifelse(Host=="Apis dorsata",Present/length(samples_ad), Prevalence_host)) %>%
                                  mutate(Prevalence_host = ifelse(Host=="Apis florea",Present/length(samples_af), Prevalence_host))
ggplot(coverage_df, aes(y = factor(cluster_name), x = factor(Sample, samples), fill = Cov)) +
                            geom_tile() +
                              labs(x = "Sample", y = "Cluster")+
                              scale_fill_gradient(na.value = "transparent", low = "#ffffff" , high = "#1a88c9", guide = "colourbar", trans = "log10") +
                              # scale_fill_gradient(na.value = "transparent", low = "#ffffff" , high = "#ffc20e", guide = "colourbar", trans = "log10") +
                                make_theme(setFill = F, modify_guide = F, y_size = 8,
                                  x_size = 0, x_angle = 30, x_hj = 1 , x_vj = 1,
                                  y_hj =1, leg_pos = "right"
                                )
                                ggsave(paste0("Figures/", "12_Host_magOTU_Coverage.pdf"))
ggplot(coverage_df, aes(y = factor(cluster_name), x = factor(Host, host_order), fill = Prevalence_host)) +
                            geom_tile() +
                              labs(x = "Sample", y = "Cluster")+
                              scale_fill_gradient(na.value = "transparent", low = "#ffffff" , high = "#1a88c9", guide = "colourbar") +
                              # scale_fill_gradient(na.value = "transparent", low = "#ffffff" , high = "#ffc20e", guide = "colourbar") +
                                coord_fixed(0.1) +
                                make_theme(setFill = F, modify_guide = F, y_size = 8,
                                  y_hj =1, leg_pos = "right"
                                )
                                ggsave(paste0("Figures/", "12_Host_magOTU_Prevalence.pdf"))
ggplot(coverage_df_genus %>% filter(Genus != "g__"), aes(y = factor(Genus, genera), x = factor(Host, host_order), fill = Prevalence_host)) +
                            geom_tile() +
                            # geom_text(aes(label = Mean)) +
                              labs(x = "Sample", y = "Cluster")+
                              # scale_fill_gradient(na.value = "transparent", low = "#fff5f0" , high = "#99000d", guide = "colourbar") +
                              scale_fill_gradient(na.value = "transparent", low = "#ffffff" , high = "#1a88c9", guide = "colourbar") +
                                guides(fill = guide_colourbar(nbin = 8)) +
                                make_theme(setFill = F, modify_guide = F, y_size = 10,
                                  x_hj= 0.5, x_size = 10,
                                  y_hj =1, leg_pos = "right", leg_size = 10
                                )
                                ggsave(paste0("Figures/", "12_Host_Genus_Prevalence.pdf"))
ggplot(coverage_df %>% filter(Genus != "g__"), aes(y = factor(Genus, genera), x = Cov, color =  factor(Genus, genera))) +
                            geom_point() +
                            # geom_text(aes(label = Mean)) +
                              labs(x = "Sample", y = "Cluster")+
                              # scale_fill_gradient(na.value = "transparent", low = "#ffffff" , high = "#ffc20e", guide = "colourbar") +
                              scale_color_manual(values = genusColors) +
                                # guides(fill = guide_colourbar(nbin = 8)) +
                                facet_wrap(~ Host) +
                                scale_x_continuous(trans = "log") +
                                make_theme(setCol = F, modify_guide = F, y_size = 10,
                                  x_hj= 0.5, x_size = 10,
                                  y_hj =1, leg_pos = "right", leg_size = 10
                                )
ggplot(coverage_df %>% filter(Genus != "g__"), aes(y = factor(cluster_name), x = Cov, color =  factor(Genus, genera))) +
                            geom_point() +
                            # geom_text(aes(label = Mean)) +
                              labs(x = "Sample", y = "Cluster")+
                              # scale_fill_gradient(na.value = "transparent", low = "#ffffff" , high = "#ffc20e", guide = "colourbar") +
                              scale_color_manual(values = genusColors) +
                                # guides(fill = guide_colourbar(nbin = 8)) +
                                facet_wrap(~ Host) +
                                scale_x_continuous(trans = "log") +
                                make_theme(setCol = F, modify_guide = F, y_size = 10,
                                  x_hj= 0.5, x_size = 10,
                                  y_hj =1, leg_pos = "none", leg_size = 0
                                )
abundance_df <- coords_df %>%
  rename(Cluster = magOTU) %>%
    left_join(cluster_tax_info %>% filter(!is.na(cluster_name))) %>%
      mutate(Host = Vectorize(get_host_name)(Sample)) %>%
        mutate(Cov = ifelse(is.na(Cov), 0, Cov)) %>%
          mutate(MedianCov = ifelse(is.na(MedianCov), 0, MedianCov)) %>%
            select(Sample, Cov, cluster_name, Host) %>%
              left_join(select(df_reads, Trimmed, Sample), by = "Sample") %>%
                  rename(NumReads = Trimmed) %>%
                    mutate(CovNorm = Cov/NumReads)
abundance_df_matrix <-  abundance_df %>% filter(!is.na(cluster_name)) %>%
                          mutate(PresAb = ifelse(CovNorm > 0, 1, 0)) %>%
                          select(Sample, cluster_name, PresAb) %>%
                            pivot_wider(names_from=cluster_name, values_from=PresAb, values_fn = as.vector) %>% remove_rownames %>%
                            column_to_rownames(var="Sample")
abundance_df_matrix_pa <-  abundance_df %>% filter(!is.na(cluster_name)) %>%
                          mutate(PresAb = ifelse(Cov > 1, 1, 0)) %>%
                          select(Sample, cluster_name, PresAb) %>%
                            pivot_wider(names_from=cluster_name, values_from=PresAb, values_fn = as.vector) %>% remove_rownames %>%
                            column_to_rownames(var="Sample")
abundance_df_matrix_Cov <-  abundance_df %>% filter(!is.na(cluster_name)) %>%
                          select(Sample, cluster_name, Cov) %>%
                            pivot_wider(names_from=cluster_name, values_from=Cov, values_fn = as.vector) %>% remove_rownames %>%
                            column_to_rownames(var="Sample")
library(ggdendro)
magOTU_clustering_Cov <- hclust(dist(abundance_df_matrix_Cov))
magOTU_clustering_pa <- hclust(dist(abundance_df_matrix_pa))
Cov_heatmap <- ggplot(abundance_df, 
                      aes(y = factor(cluster_name),
                          x = factor(Sample,
                          levels=abundance_df_matrix_Cov[order.dendrogram(as.dendrogram(magOTU_clustering_Cov)), ] %>% rownames()),
                          fill = Cov)) +
                            geom_tile() +
                              labs(x = "Sample", y = "Cluster")+
                              scale_fill_gradient(na.value = "transparent", low = "#ffffff" , high = "#1a88c9", guide = "colourbar", trans = "log10") +
                              # scale_fill_gradient(na.value = "transparent", low = "#ffffff" , high = "#ffc20e", guide = "colourbar", trans = "log10") +
                                make_theme(setFill = F, modify_guide = F, y_size = 8,
                                  x_size = 10, x_angle = 40, x_hj = 1 , x_vj = 1,
                                  y_hj =1, leg_pos = "right"
                                )
Pa_heatmap <- ggplot(abundance_df %>% mutate(PresAb = ifelse(Cov > 1, "Present", "Absent")),
                     aes(y = factor(cluster_name),
                         x = factor(Sample, 
                         levels=abundance_df_matrix_pa[order.dendrogram(as.dendrogram(magOTU_clustering_pa)), ] %>% rownames()),
                         fill = factor(PresAb))) +
                          geom_tile() +
                            labs(x = "Sample", y = "Cluster")+
                            scale_fill_manual(values=list("Present"= "#1a88c9", "Absent" = "#ffffff")) +
                            # scale_fill_gradient(na.value = "transparent", low = "#ffffff" , high = "#ffc20e", guide = "colourbar", trans = "log10") +
                              make_theme(setFill = F, modify_guide = F, y_size = 8,
                                  x_size = 10, x_angle = 40, x_hj = 1 , x_vj = 1,
                                  y_hj =1, leg_pos = "right"
                              )
library(dendextend)
p_cov <- grid.arrange(
    arrangeGrob(
      grid.rect(gp=gpar(col="white")),
      ggdendrogram(magOTU_clustering_Cov) + theme(axis.text.y = element_text(size = 0)),
      grid.rect(gp=gpar(col="white")),
      ncol = 3,
      widths = c(2, 13, 1)
    ),
    arrangeGrob(
      Cov_heatmap
    ),
    nrow = 2,
    heights = c(1,4)
)
p_cov
ggsave("Figures/12f_heatmap_coverage_clustering.pdf", p_cov)
p_pa <- grid.arrange(
    arrangeGrob(
      grid.rect(gp=gpar(col="white")),
      ggdendrogram(magOTU_clustering_pa) + theme(axis.text.y = element_text(size = 0)),
      grid.rect(gp=gpar(col="white")),
      ncol = 3,
      widths = c(1.5, 10, 1)
    ),
    arrangeGrob(
      Pa_heatmap
    ),
    nrow = 2,
    heights = c(1,4)
)
p_pa
ggsave("Figures/12f_heatmap_presence_absence_clustering.pdf", p_pa)
df_num_magOTUs <- abundance_df %>%
                    group_by(Sample) %>%
                      mutate(Detected = ifelse(CovNorm > 0, 1, 0)) %>%
                      summarise(Sample, Host = Vectorize(get_host_name)(Sample), number = sum(Detected), .groups="keep") %>%
                        unique()
                            test_all <- pairwise.wilcox.test(df_num_magOTUs$number, df_num_magOTUs$Host, p.adjust = "fdr")
                            glm_all <- summary(glm(data = df_num_magOTUs, number ~ Host, family = "poisson"))
test_all
glm_all
df_num_magOTUs_plot <- ggplot(df_num_magOTUs, aes(x = factor(Host, levels = c("Apis florea", "Apis cerana", "Apis mellifera", "Apis dorsata")), y = number, fill = Host)) +
                                        geom_boxplot(outlier.shape = NA) +
                                        geom_jitter(width = .07) +
                                        labs(y = "Number of magOTUs per individual", x = "Host species") +
                                          make_theme(leg_pos = "none", x_angle = 30, setFill = F, x_vj = 1, x_hj = 1, ) +
                                          scale_fill_manual(values=host_order_color)
                                          ggsave(paste0("Figures/", "12_BoxPlot_across_species.pdf"))
df_num_magOTUs_plot
observations_host_df <- abundance_df %>%
                    group_by(Sample) %>%
                      mutate(Detected = ifelse(CovNorm > 0, 1, 0)) %>%
                      filter(Detected == 1) %>%
                      filter(!is.na(cluster_name)) %>%
                      group_by(Host) %>%
                        summarise(Host, cluster_name) %>%
                        unique() %>%
                          pivot_wider(names_from = Host, values_from = cluster_name, values_fn = list)
observations_host <- list(
   `Apis mellifera` = observations_host_df %>% pull(`Apis mellifera`) %>% unlist,
   `Apis cerana` = observations_host_df %>% pull (`Apis cerana`) %>% unlist ,
   `Apis dorsata` = observations_host_df %>% pull (`Apis dorsata`) %>% unlist ,
   `Apis florea` = observations_host_df %>% pull (`Apis florea`) %>% unlist
)
venn.diagram(
  x = observations_host,
  category.names = names(observations_host),
  output = T,
  filename = paste0("Figures/", "12_venn_diagram.pdf"),
  fill = host_order_color
)
observations <- abundance_df %>%
                  group_by(Sample) %>%
                    summarise(cluster_name, .groups="keep") %>%
                      pivot_wider(names_from = Sample, values_from = cluster_name, values_fn = list)
df_magOTUs_vegan <- abundance_df_matrix
make_cum_curve <- function(samples_vector, pa_df, iterations, name = NA) {
  num_clusters_matrix <- matrix(nrow = length(samples_vector), ncol = iterations)
  for (iter in 1:iterations) {
    clusters_found_cumulative <- c()
    for (num_samples in 1:length(samples_vector)) {
      num_new_clusters = 0
      selected_samples <- sample(samples_vector, num_samples)
      clusters_found <- colnames(pa_df[selected_samples, which(colSums(pa_df[selected_samples, ]) > 1)])
      for (cluster in clusters_found) {
        if (cluster %in% clusters_found_cumulative) {
          invisible()
        } else {
          num_new_clusters <- num_new_clusters + 1
          clusters_found_cumulative <- c(clusters_found_cumulative, cluster)
        }
      }
      num_clusters_matrix[num_samples, iter] = length(clusters_found_cumulative)
    }
  }
  num_clusters_df <- as.data.frame(num_clusters_matrix)
  colnames(num_clusters_df) <- do.call(function(x) paste0("curve_", x), list(c(1:iterations)))
  num_clusters_df <- cbind(sample_size = c(1:length(samples_vector)), num_clusters_df)
  plot_cum_curve_df <- pivot_longer(num_clusters_df, !sample_size, values_to = "number_of_clusters", names_to = "curve")
  plot_cum_curve_df <- cbind("name" = name, plot_cum_curve_df)
  return(plot_cum_curve_df)
}
df_plot_cum_curve <- rbind(
                        make_cum_curve(samples_am, df_magOTUs_vegan, 50, "Apis mellifera"),
                        make_cum_curve(samples_ac, df_magOTUs_vegan, 50, "Apis cerana"),
                        make_cum_curve(samples_ad, df_magOTUs_vegan, 50, "Apis dorsata"),
                        make_cum_curve(samples_af, df_magOTUs_vegan, 50, "Apis florea")
                      )
magotu_accumulation_curve <- ggplot(data = df_plot_cum_curve, aes(x = sample_size, y = number_of_clusters, color = factor(name, host_order))) +
                      geom_jitter(position = position_dodge(width=0.7)) +
                        geom_smooth(se = FALSE) +
                          labs(color = "Host species", x = "# Bees", y = "Number of magOTUs") +
                          scale_color_manual(values=host_order_color) +
                            make_theme(leg_pos = "bottom", setCol = F, guide_nrow = 1)
                            # ggsave("Figures/09c-magOTUs_accumulation_curve.pdf")
magotu_accumulation_curve
pcoa_plot_by_host <- function(df_pcoa) {
          matrix <- as.matrix(df_pcoa)
          dist <- as.dist(matrix)
          res_pcoa <- pcoa(dist)
          ev1 <- res_pcoa$vectors[,1]
          ev2 <- res_pcoa$vectors[,2]
          df_pcoa_new <- data.frame(cbind(ev1,ev2))
          df_pcoa_new$Sample <- rownames(df_pcoa_new)
          rownames(df_pcoa_new) <- NULL
          df_pcoa_new <- left_join(df_pcoa_new, select(df_meta, Sample, SpeciesID), by = "Sample")
          perc_axis <- round(((res_pcoa$values$Relative_eig[c(1,2)])*100), digits=1)
          axis_x_title <- paste0("PCo1 (",perc_axis[1],"%)")
          axis_y_title <- paste0("PCo2 (",perc_axis[2],"%)")
          p <- ggplot(df_pcoa_new, aes(x = ev1,
                                       y = ev2,
                                       colour = factor(SpeciesID, levels = host_order)))+
                geom_point(stat="identity", size=2, shape=19) +
                  labs(x=axis_x_title, y = axis_y_title, color = "Host") +
                    make_theme(setCol = F, guide_nrow = 1) +
                      scale_color_manual(values=host_order_color)
          return(p)
}
pcoa_plot <- function(df_pcoa, variable=SpeciesID) {
          matrix <- as.matrix(df_pcoa)
          dist <- as.dist(matrix)
          res_pcoa <- pcoa(dist)
          ev1 <- res_pcoa$vectors[,1]
          ev2 <- res_pcoa$vectors[,2]
          df_pcoa_new <- data.frame(cbind(ev1,ev2))
          df_pcoa_new$Sample <- rownames(df_pcoa_new)
          rownames(df_pcoa_new) <- NULL
          df_pcoa_new <- left_join(df_pcoa_new, select(df_meta, Sample, SpeciesID, matches(variable)), by = "Sample")
          perc_axis <- round(((res_pcoa$values$Relative_eig[c(1,2)])*100), digits=1)
          axis_x_title <- paste0("PCo1 (",perc_axis[1],"%)")
          axis_y_title <- paste0("PCo2 (",perc_axis[2],"%)")
          p <- ggplot(df_pcoa_new, aes(x = ev1,
                                       y = ev2,
                                       colour = get(variable)))+
                geom_point(stat="identity", aes(size=15, shape=14)) +
                  labs(x=axis_x_title, y = axis_y_title, color = variable) +
                    make_theme( max_colors = length(unique(df_pcoa_new[, variable])), guide_nrow = 4 )
          return(p)
}
dist_matrix <- as.matrix(vegdist(df_magOTUs_vegan, "jaccard"))
pcoa_magotus <- pcoa_plot_by_host(dist_matrix)
          # ggsave("Figures/09d-magOTUs_pcoa.pdf")
variable="SpeciesID"
df_pcoa <- dist_matrix
matrix <- as.matrix(df_pcoa)
dist <- as.dist(matrix)
res_pcoa <- pcoa(dist)
ev1 <- res_pcoa$vectors[,1]
ev2 <- res_pcoa$vectors[,2]
df_pcoa_new <- data.frame(cbind(ev1,ev2))
df_pcoa_new$Sample <- rownames(df_pcoa_new)
rownames(df_pcoa_new) <- NULL
df_pcoa_new <- left_join(df_pcoa_new, select(df_meta, Sample, SpeciesID, matches(variable)), by = "Sample")
perc_axis <- round(((res_pcoa$values$Relative_eig[c(1,2)])*100), digits=1)
axis_x_title <- paste0("PCo1 (",perc_axis[1],"%)")
axis_y_title <- paste0("PCo2 (",perc_axis[2],"%)")
ggplot(df_pcoa_new, aes(x = ev1,
                        y = ev2,
                        color = SpeciesID))+
                geom_point(stat="identity", size = 3, shape = 16) +
                  labs(x=axis_x_title, y = axis_y_title, color = "Host") +
                  scale_color_manual(values = host_order_color) +
                    make_theme(setCol = F, guide_nrow = 4)
                    ggsave(paste0("Figures/", "12_PCoA_host_colors.pdf"))
options()
savehistory("~/.My_Rhistory")
savehistory(".Rhistory")
